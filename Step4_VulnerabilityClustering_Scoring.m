clear all; close all; clc

%% Code developed by Cristina Izaguirre (izaguirrelasac@gmail.com/izaguirrec@unican.es) and Paula Camus (P.Camus-Brana@soton.ac.uk/camusp@unican.es)
%% within the works of the paper "Climate change risk to global port operations". June 2020
%% IHCantabria-Instituto de Hidraulica Ambiental de la Universidad de Cantabria, Santander, Spain

addpath([pwd '\Clustering'])

path_data=[pwd '\Data\'];
path_colors=[pwd '\Colormaps\'];
path_res=[pwd '\Results\'];


% Load data
portsWPI=load([path_data 'SelectionPortsWPI.dat']); 
load([path_data 'Exposure_Vulnerability_WPI.mat'])% port characteristics from the WPI database
color=load([path_colors 'colormapVulnerabilityGroups.dat']);
colores=flipud(color);

colores1=load([path_colors 'colormapScore.dat']);
colores11=flipud(colores1);
colores11=colores11(1:end-1,:);

%% Recovery Capacity
W=load([path_data 'GDPpcports.dat']);

%% Resilience
R=load([path_data 'LPIports.dat']);


%% Services --> Tecnhological Capacity
vessel=PORTS_WPI.MaxVessel;
cod_ves={'L','M'};
punt_ves=[2 1];

ves=ones(length(vessel),1).*NaN;
for i=1:2
    
    poT=find(strcmp(cod_ves{i},vessel));
    ves(poT)=punt_ves(i);
    
    clear poT
end

Size=PORTS_WPI.HarborSize;
cod_siz={'L','M','S','V'};
punt_siz=[1 2 3 4];
HSize=ones(length(vessel),1).*NaN;
for i=1:4
    
    poSiz=find(strcmp(cod_siz{i},Size));
    HSize(poSiz)=punt_siz(i);
    
    clear poSiz
end

med=PORTS_WPI.MedicalFacilities;
garbage=PORTS_WPI.Garbage;
% Cranes
cranefix=PORTS_WPI.CraneFix./3;
cranemob=PORTS_WPI.CraneMobile./3;
craneflo=PORTS_WPI.CraneFloat./3;

drydock=PORTS_WPI.Dry;
MarinR=PORTS_WPI.MarineRail;

cod={'L','M','S'};
punt=[3 2 1];
DD=ones(length(ves),1).*NaN;
MR=ones(length(ves),1).*NaN;
for i=1:3
    podd=find(strcmp(cod{i},drydock));
    DD(podd)=punt(i);
    
    pomr=find(strcmp(cod{i},MarinR));
    MR(podd)=punt(i)./3;
    
    clear podd pomr
end

pilot=PORTS_WPI.PilotageAvail;
tugs=PORTS_WPI.Tugs;
% Services (5)
Long=PORTS_WPI.Longshore./5;
Elect=PORTS_WPI.Electrical./5;
Steam=PORTS_WPI.Steam./5;
NavEq=PORTS_WPI.NavEquip./5;
ElectRep=PORTS_WPI.ElectRep./5;

% Supplies (6)
Prov=PORTS_WPI.Prov./6;
Water=PORTS_WPI.Water./6;
Fuel=PORTS_WPI.Fuel./6;
Diesel=PORTS_WPI.Diesel./6;
Deck=PORTS_WPI.Deck./6;
EngS=PORTS_WPI.EngineSupply./6;

Repair=PORTS_WPI.Repairs;

codR={'A','B','C','D','N'};
puntR=[4 3 2 1 0];

REP=ones(length(ves),1).*NaN;
for i=1:5
    porep=find(strcmp(codR{i},Repair));
    REP(porep)=puntR(i)./4;
    
    clear porep
end

ETA=PORTS_WPI.ETA;
% Communications (6)
Phone=PORTS_WPI.Phone./6;
Fax=PORTS_WPI.Fax./6;
Radio=PORTS_WPI.Radio./6;
Tele=PORTS_WPI.Teleradio./6;
Air=PORTS_WPI.Air./6;
Rail=PORTS_WPI.Rail./6;

services=[med garbage cranefix cranemob craneflo DD MR pilot tugs Long Elect Steam NavEq ElectRep Prov Water Fuel Diesel Deck EngS REP ETA Phone Fax Radio Tele Air Rail];

SS=nansum(services,2);

%% Clustering of vulnerability components: Technological capacity (SS), Resilience (R) and Recovering capacity (W)
datos=[SS R W]; % 
dumNaN=find(isnan(datos(:,1)));
datos(dumNaN,:)=[];
[N,dim]=size(datos);
novalidos=dumNaN';

nombres(1)={'Tech. Cap.'};
nombres(2)={'Resilience'};
nombres(3)={'Recov. Cap.'};

escalar=1:dim;
direccional=[];

% Data normalization
minimos = zeros(dim,1);
maximos = zeros(dim,1);
for i=1:dim
    minimos(i)=min(datos(:,i));
    maximos(i)=max(datos(:,i));
end
datos_n = zeros(N,dim);
for i=1:dim
    datos_n(:,i)=(datos(:,i)-minimos(i))./(maximos(i)-minimos(i));
end

% Clustering using K-means
mascara=ones(dim,1);
% Inicialization with MDA, Camus et al. (2011)
tam=6;
[bmus,centers_n]=kmeans_modificado_initMDA(datos_n,tam,escalar,direccional,mascara);
centers=zeros(tam,dim);
for i=1:dim
    centers(:,i)=centers_n(:,i)*(maximos(i)-minimos(i))+minimos(i);
end

% Mean values, 5 and 95 percentiles of the data of each cluster
medios = zeros(tam,dim);
P75 = zeros(tam,dim);
P25 = zeros(tam,dim);
P95 = zeros(tam,dim);
P5 = zeros(tam,dim);
for i=1:tam
        dum=find(bmus==i);
        for d=1:dim
            medios(i,d)=mean(datos_n(dum,d));
            P95(i,d)=prctile(datos_n(dum,d),95);
            P5(i,d)=prctile(datos_n(dum,d),5);
            P75(i,d)=prctile(datos_n(dum,d),75);
            P25(i,d)=prctile(datos_n(dum,d),25);
        end
end

%% Spatial distribution of vulnerability clusters. Figure SM6a

figure(1);
ax = worldmap('world');
setm(ax,'FontSize',16)
load coastlines
geoshow(ax, coastlat, coastlon,...
    'DisplayType', 'polygon', 'FaceColor', [.8 .8 .8])
scatterm(portsWPI(:,2),portsWPI(:,1),30,bmus,'filled','MarkerEdgeColor',[0 0 0],'LineWidth',0.001) % 
colormap(colores)
colorbar
caxis([1 6])
colorbar('Ticks',(1+5/12:5/6:6),'TickLabels',[1:6],'Fontsize',16)

file1='FigureSM6a.eps';
print(file1,'-depsc2')

% Number of data in each cluster
acierto=zeros(tam,1);
for t=1:tam    
    dum=find(bmus==t);
    acierto(t)=length(dum);
end
acierto_ = acierto/length(bmus)*100;
acierto_ = round(acierto_*100)/100;
[racierto, pacierto]=sort(acierto_);
posis=flipud(pacierto);

%% Cluster characteristics. Figure SM6b

figure(2)
for t=1:tam
    subplot(2,3,t)
    
    for d=1:dim
        
        plot([P25(posis(t),d) P75(posis(t),d)],[d d],'color',colores(posis(t),:),'LineWidth',5)
        hold on
        plot([centers_n(posis(t),d) centers_n(posis(t),d)],[d d],'+k')
        hold on
        plot([P5(posis(t),d) P95(posis(t),d)],[d d],'--o','MarkerSize',2,'color','k')
    end
    axis([0 1 0 dim+1])
    if t==1 || t==4
        set(gca,'Ytick',1:1:dim,'YtickLabel',nombres,'FontSize',7.5)
    else
        set(gca,'Ytick',1:1:dim,'YtickLabel',[],'FontSize',7.5)
    end
    
    grid on
    title([num2str(acierto_(posis(t))) '% ports. Cluster # ' num2str(posis(t))],'FontSize',8.5)
end

file2='FigureSM6b.eps';
print(file2,'-depsc2')

%% Scoring vulnerability
% We transformed the six clusters into a 1 to 5 ranked scale (very low to very high vulnerability) using the sum of the three-value centroids of each cluster as an indicator of the severity of its vulnerability
sum_cen=sum(centers_n,2);

[SC poSC]=sort(sum_cen);

rangos=linspace(0,3,6);

rankV=ones(length(bmus),1).*NaN;

for i=1:length(rangos)-1
    poran=find(sum_cen>rangos(i) & sum_cen<=rangos(i+1));
    for j=1:length(poran)
        po=find(bmus==poran(j));
        rankV(po)=length(rangos)-i;
        clear po
    end
    clear poran
end

save([path_res 'rankV_tam' num2str(tam) '.dat'],'rankV','-ascii')

%% Spatial distribution of vulnerability level of each port
figure(3);
ax = worldmap('world');
setm(ax,'FontSize',14)
load coastlines
geoshow(ax, coastlat, coastlon,...
    'DisplayType', 'polygon', 'FaceColor', [.8 .8 .8])
scatterm(portsWPI(:,2),portsWPI(:,1),30,rankV,'filled','MarkerEdgeColor',[0 0 0],'LineWidth',0.1) % 
colorbar
colormap(colores11)
caxis([1 5])
c=colorbar('Ticks',[1.4 2.2 3 3.8 4.6],'TickLabels',{'Very Low','Low','Medium','High','Very High'});
c.FontSize=12;

file3='FigureSM7.eps';
print(file3,'-depsc2')







